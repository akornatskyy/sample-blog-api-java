{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "S3JarBucket": {
      "Description": "The name of the S3 bucket that contains the source code of Lambda function.",
      "Type": "String"
    },
    "JarFileName": {
      "Description": "The location and name of jar file.",
      "Type": "String",
      "Default": "sample-blog-aws-1.0-SNAPSHOT.jar"
    }
  },
  "Resources": {
    "LambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "/",
            [
              "/aws/lambda",
              {
                "Ref": "Lambda"
              }
            ]
          ]
        },
        "RetentionInDays": 3
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "lambda-role"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "request-handler"
            ]
          ]
        },
        "Handler": "com.github.blog.aws.lambda.ApiRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "S3JarBucket"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "JarFileName"
                }
              ]
            ]
          }
        },
        "Runtime": "java8",
        "MemorySize": 128,
        "Timeout": 5
      }
    },
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": {
          "Ref": "AWS::StackName"
        }
      }
    },
    "RestApiLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Lambda",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "RestApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ProxyResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}"
      }
    },
    "ProxyMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "ResourceId": {
          "Ref": "ProxyResource"
        },
        "HttpMethod": "ANY",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "NEVER",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Lambda",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        }
      },
      "DependsOn": [
        "ProxyMethod"
      ]
    },
    "Stage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "StageName": "v1",
        "RestApiId": {
          "Ref": "RestApi"
        },
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "Variables": {
          "env": "dev"
        },
        "MethodSettings": [
        ]
      }
    }
  },
  "Outputs": {
    "ApiId": {
      "Value": {
        "Ref": "RestApi"
      }
    }
  }
}